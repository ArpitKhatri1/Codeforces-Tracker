generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  name             String
  email            String         @unique
  codeforcesHandle String
  personalTags     PersonalTags[]

  revision               UserRevisionProblems[]
  PersonalTagsOnProblems PersonalTagsOnProblems[]
}

model UserRevisionProblems {
  user   User @relation(fields: [userId], references: [id])
  userId Int

  problemContestId Int
  problemId        Int

  @@id([userId, problemContestId])
}

model PersonalTagsOnProblems {
  tagNames       String[]
  personalTagId  Int
  problemId      Int
  userId         Int
  user           User          @relation(fields: [userId], references: [id])
  PersonalTags   PersonalTags? @relation(fields: [personalTagsId], references: [id])
  personalTagsId Int?

  @@id([personalTagId, problemId])
}

model PersonalTags {
  id   Int    @id @default(autoincrement())
  name String

  userId Int?
  user   User? @relation(fields: [userId], references: [id])

  // Relation to problems through junction table
  problems PersonalTagsOnProblems[]
}

// Enum for possible verdicts (optional, but recommended)
enum Verdict {
  OK
  WRONG_ANSWER
  TIME_LIMIT_EXCEEDED
  MEMORY_LIMIT_EXCEEDED
  RUNTIME_ERROR
  COMPILATION_ERROR
  SYSTEM_ERROR
  OTHER
}

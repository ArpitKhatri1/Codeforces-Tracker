generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Problem {
  id Int @id @unique

  ProblemTags    ProblemTags[]
  User           User?            @relation(fields: [userId], references: [id])
  userId         Int?
  ProblemSnippet ProblemSnippet[]
}

model PersonalTags {
  id     Int    @id @unique @default(autoincrement())
  name   String @unique
  userId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  ProblemTags ProblemTags[]

  @@unique([userId, name])
}

model ProblemTags {
  problemId Int
  problem   Problem      @relation(fields: [problemId], references: [id])
  tagId     Int
  tag       PersonalTags @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@unique([problemId, tagId])
}

model User {
  id               Int      @id @default(autoincrement())
  createdAt        DateTime @default(now())
  name             String
  codeforcesHandle String   @unique
  email            String   @unique

  personalTags PersonalTags[]
  revision     UserRevisionProblems[]
  problems     Problem[]
}

model UserRevisionProblems {
  user             User @relation(fields: [userId], references: [id])
  userId           Int
  problemContestId Int
  problemId        Int

  @@id([userId, problemId])
}

model ProblemSnippet {
  snippetText String
  problemId   Int     @unique
  problem     Problem @relation(fields: [problemId], references: [id])
}

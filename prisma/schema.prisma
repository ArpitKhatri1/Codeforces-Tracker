generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Problem {
  id        Int      @id @default(autoincrement())
  contestId Int
  createdAt DateTime @default(now())

  // Many-to-many relationship with PersonalTags through junction table
  taggedByUsers PersonalTagsOnProblems[]
}

model PersonalTags {
  id   Int    @id @default(autoincrement())
  name String

  userId Int?
  user   User? @relation(fields: [userId], references: [id])

  taggedProblems PersonalTagsOnProblems[]
}

model PersonalTagsOnProblems {
  userId    Int
  problemId Int
  tagId     Int

  user    User         @relation(fields: [userId], references: [id])
  problem Problem      @relation(fields: [problemId], references: [id])
  tag     PersonalTags @relation(fields: [tagId], references: [id])

  @@id([userId, problemId, tagId]) // Composite primary key
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String

  codeforcesHandle String @unique

  personalTags   PersonalTags[]
  revision       UserRevisionProblems[]
  taggedProblems PersonalTagsOnProblems[]
}

model UserRevisionProblems {
  user   User @relation(fields: [userId], references: [id])
  userId Int

  problemContestId Int
  problemId        Int

  @@id([userId, problemContestId])
}
